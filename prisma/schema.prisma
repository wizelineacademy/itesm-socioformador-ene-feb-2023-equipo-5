generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String       @id @default(uuid())
  name         String
  email        String       @unique
  password     String
  englishlevel Englishlevel @default(A1)
  summary      String?
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt

  //Relation with Test
  tests Test[]
}

model Teacher {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  //Relation many to many with Test
  examns Comments[]
}

model Comments {
  comment   String
  modified  Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  instructor   Teacher @relation(fields: [instructorId], references: [id])
  instructorId String
  situation    Test    @relation(fields: [situationId], references: [id])
  situationId  String

  @@id([instructorId, situationId])
}

model Test {
  id           String       @id @default(uuid())
  videoURL     String
  result       String
  feedaback    String
  englishlevel Englishlevel @default(A1)
  resources    String
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt

  //Relation with User
  author          User       @relation(fields: [authorId], references: [id])
  authorId        String
  //Relation with Question
  mainSituation   Question   @relation(fields: [mainSituationId], references: [id])
  mainSituationId String
  //Relation many to many with Teacher
  master          Comments[]
}

model Question {
  id        String       @id @default(uuid())
  situation String
  level     Englishlevel @default(A1)
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt

  //Relation with Test
  tests Test[]
}

enum Englishlevel {
  A1
  A2
  B1
  B2
  C1
  C2
}
